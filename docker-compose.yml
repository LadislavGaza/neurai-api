version: "3.9"
services:
  api:
    build:
      context: .
      dockerfile: api/config/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - "./api/config/api.env"
    volumes:
      - ./api:/neurai/api
      - logs_api:/var/log
    depends_on:
      db:
        condition: service_healthy
    restart: always

  site_api:
    build:
      context: .
      dockerfile: site_api/config/Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - "./site_api/config/api.env"
    volumes:
      - ./site_api:/neurai/site_api
      - sqlite_data:/neurai/sqlite
      - logs_site_api:/var/log/
    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:15
    env_file:
      - "./api/config/db.env"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
        interval: 5s
        timeout: 5s
        retries: 5
    restart: always

  pacs:
    image: osimis/orthanc
    restart: unless-stopped
    ports:
      - "11112:11112"
      - "8010:8010"
    volumes:
      - "orthanc-storage:/var/lib/orthanc/db:Z"
    environment:
      VERBOSE_ENABLED: "true"
      VERBOSE_STARTUP: "true"
    secrets:
        - "orthanc.json"

secrets:
  orthanc.json:
    file: site_api/config/orthanc.json

volumes:
  pgdata:
  sqlite_data:
  orthanc-storage:
  logs_api:
  logs_site_api:
